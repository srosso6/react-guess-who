* {
  box-sizing: border-box;
}

body {
  background-color: #000;
  color: #9F0312;
  background-image: url("img/background.jpeg");
  background-position: right top;
  background-repeat: no-repeat;
}

h1 {
  font-size: 2em;
  display: inline-block;
  width: 50%;
  vertical-align: top;
  padding-top: 50px;
  padding-left: 50px;
}

h3 {
  font-size: 1em;
}

.characters {
  float: left;
  width: 50%;
  height: 450px;
  margin-top: 15px;
  padding-left: 15px;
}

.qanda {
  float: left;
  width: 40%;
  text-align: center;
  margin-top: 8%;
  margin-left: 5%;
  padding: 5px 5px;
  padding-top: 20px;
  border-radius: 15%;
  background-color: rgba(159,3,18, 0.3);
}


/* FORMS */

label {
  margin: 0;
  font-size: 1em;
  display: block;
  width: 80%;
  margin: 0 auto;
  text-align: left;
}

select {
  margin: 0;
  display: block;
  width: 80%;
  height: 20px;
  margin: 0 auto;
  margin-top: 10px;
  padding: 10px 10px;
  background-color: #BF6868;
}


/* FLIP CARDS */

.flip-container {
  display: inline-block;
  height: 33.333333333%;
  width: 24%;
  margin: 0 0.5%;
  border-radius: 5%;
  position: relative;
  -webkit-perspective: 800px;
  /* The perspective CSS property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective. Each 3D element with z>0 becomes larger; each 3D-element with z<0 becomes smaller. */
}

.flipped {
  transform: rotateY(180deg);
}
/* This class is added when the flip-container is clicked by toggling class list */

.flipper {
  width: 100%;
  height: 100%;
  border-radius: 5%;
  position: absolute;
  transform-style: preserve-3d;
  transition: transform 1s;
  border: 2px solid #7E0312;
  /* The inner container is the element that actually flips, spinning 180 degrees when the parent container is hovered over. This is also where you control the transition speed. Changing the rotation to -180deg spins the elements in the reverse direction.*/
}

.flipper img {
  /*margin: 0;*/
  display: block;
  width: 100%;
  height: 100%;
  border-radius: 5%;
  position: absolute;
  /* front and back can overlay eachother in same position when positioned absolutely */
  -webkit-backface-visibility: hidden;
  /* prevents back from showing during animation, which causes flickering */
}

.back {
  transform: rotateY(180deg);
  /* rotated 180 degrees to act as back */
}
